# Copyright (c) 2021, NVIDIA CORPORATION. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

ARG BASE_IMAGE
FROM ${BASE_IMAGE}

ENV DEBIAN_FRONTEND=noninteractive
ENV SHELL /bin/bash
ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'
ARG MAKEFLAGS=-j$(nproc)
ARG WORKSPACE=/jetson-reinforcement

WORKDIR ${WORKSPACE}

# alias python3 -> python
RUN rm /usr/bin/python && \
    ln -s /usr/bin/python3 /usr/bin/python && \
    ln -s /usr/bin/pip3 /usr/bin/pip
    
# set Python to unicode
ENV PYTHONIOENCODING=utf-8


################################################################
## DLR-RM/stable-baselines3
################################################################
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
		build-essential \
		cmake \
		git \
		curl \
		ca-certificates \
		libjpeg-dev \
		libpng-dev \
		libglib2.0-0 \
		nano \
		unzip \
		tzdata \
		python3-tk \
		mesa-utils \
		libgl1-mesa-glx \
		libgl1-mesa-dri \
		xvfb \
		swig \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean
    

# versions this installs:
#   stable-baselines3 1.3.0 (this is the max version that supports Python 3.6)
#   gym 0.19.0
#   atari-py 0.2.6
RUN pip3 install --no-cache-dir --verbose pyvirtualdisplay pyglet
RUN pip3 install --no-cache-dir --verbose box2d box2d-kengz
RUN pip3 install --no-cache-dir --verbose stable-baselines3
RUN pip3 install --no-cache-dir --verbose atari-py==0.2.6


################################################################
## DLR-RM/rl-baselines3-zoo
################################################################
RUN curl https://sh.rustup.rs -sSf | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"
RUN rustc --version && \
    pip3 install --no-cache-dir --verbose setuptools-rust
    
COPY samples/rl-baselines3-zoo/requirements.txt /tmp/rl-baselines3-zoo-requirements.txt
RUN pip3 install --no-cache-dir --verbose -r /tmp/rl-baselines3-zoo-requirements.txt

# download models (do it this way to avoid cloning entire repo history)
# 3dd2af4c is the SHA for rl-baselines3 v1.3.0
ARG RL_AGENTS_URL=https://github.com/DLR-RM/rl-trained-agents/archive/3dd2af4cee930750016cf943dc6393bada57b89c.zip
ARG RL_AGENTS_ZIP=/tmp/rl-trained-agents.zip

RUN wget --quiet --show-progress --progress=bar:force:noscroll --no-check-certificate ${RL_AGENTS_URL} -O ${RL_AGENTS_ZIP} && \
    unzip ${RL_AGENTS_ZIP} -d ${WORKSPACE} && \
    mv rl-trained-agents-* rl-trained-agents && \
    rm -rf ${RL_AGENTS_ZIP}
    

################################################################
## re-install OpenCV (this version gets overwritten above)
################################################################
ARG OPENCV_URL=https://nvidia.box.com/shared/static/5v89u6g5rb62fpz4lh0rz531ajo2t5ef.gz
ARG OPENCV_DEB=OpenCV-4.5.0-aarch64.tar.gz

RUN apt-get purge -y '*opencv*' || echo "previous OpenCV installation not found" && \
    pip3 uninstall -y opencv-python && \
    mkdir opencv && \
    cd opencv && \
    wget --quiet --show-progress --progress=bar:force:noscroll --no-check-certificate ${OPENCV_URL} -O ${OPENCV_DEB} && \
    tar -xzvf ${OPENCV_DEB} && \
    dpkg -i --force-depends *.deb && \
    apt-get update && \
    apt-get install -y -f --no-install-recommends && \
    dpkg -i *.deb && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean && \
    cd ../ && \
    rm -rf opencv && \
    cp -r /usr/include/opencv4 /usr/local/include/opencv4 && \
    cp -r /usr/lib/python3.6/dist-packages/cv2 /usr/local/lib/python3.6/dist-packages/cv2

