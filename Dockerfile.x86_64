# Copyright (c) 2021, NVIDIA CORPORATION. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

ARG BASE_IMAGE
FROM ${BASE_IMAGE}

ENV DEBIAN_FRONTEND=noninteractive
ENV SHELL /bin/bash
#ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'
ARG MAKEFLAGS=-j$(nproc)
ARG WORKSPACE=/jetson-reinforcement

WORKDIR ${WORKSPACE}
    
# set Python to unicode
ENV PYTHONIOENCODING=utf-8


################################################################
## DLR-RM/stable-baselines3
################################################################
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
		build-essential \
		cmake \
		git \
		curl \
		ca-certificates \
		libjpeg-dev \
		libpng-dev \
		libglib2.0-0 \
		nano \
		tzdata \
		python3-tk \
		mesa-utils \
		libegl1-mesa \
		swig \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean
    
RUN pip3 install --no-cache-dir --verbose pyvirtualdisplay pyglet
RUN pip3 install --no-cache-dir --verbose box2d box2d-kengz

# note:  these versions are hardcoded to match the aarch64 container
RUN pip3 install --no-cache-dir --verbose gym==0.19.0
RUN pip3 install --no-cache-dir --verbose stable-baselines3==1.3.0
RUN pip3 install --no-cache-dir --verbose atari-py==0.2.6
    
# install a newer version of opencv (with GUI support) than the one in the base container
# (for some reason the older version can't be uninstalled with conda, so delete it)    
RUN rm -rf /opt/conda/lib/python3.8/site-packages/cv2 && \
    conda install -y opencv